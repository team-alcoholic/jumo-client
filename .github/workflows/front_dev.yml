name: Build and Deploy Next.js Docker Image

on:
  push:
    branches:
      - 'develop'

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL_DEV }}" > .env
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL_DEV }}" >> .env
          echo "NEXT_PUBLIC_GA_ID=${{ secrets.NEXT_PUBLIC_GA_ID }}" >> .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to AWS ECR
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jumo_front_dev:latest .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jumo_front_dev:latest

  get-runners:
    runs-on: ubuntu-latest
    outputs:
      runners: ${{ steps.get_runners.outputs.runners }}
    steps:
      - name: Get List of Self-hosted Runners
        id: get_runners
        uses: actions/github-script@v6
        with:
          script: |
            const runners = await github.actions.listSelfHostedRunnersForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const devRunners = runners.data.runners
              .filter(runner => runner.labels.some(label => label.name === 'dev'))
              .map(runner => runner.name);

            console.log(devRunners);
            return JSON.stringify(devRunners);
          result-encoding: string

  deploy:
    needs: [build-docker-image, get-runners]
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: ${{ fromJson(needs.get-runners.outputs.runners) }}
    steps:
      - name: Select Runner
        run: |
          echo "Deploying on runner: ${{ matrix.runner }}"

      - name: ecr get-login-password
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jumo_front_dev

      - name: Pull Docker image from AWS ECR
        run: |
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jumo_front_dev:latest

      - name: Stop Docker container before running new container
        run: |
          sudo docker stop $(sudo docker ps -aq) || true

      - name: Run new Docker container
        run: |
          docker run --rm -it -d -p 80:3000 --name jumo_front_dev ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jumo_front_dev:latest

      - name: Clean up unused Docker images after deployment
        run: |
          sudo docker image prune -a -f || true
